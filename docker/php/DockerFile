# Устанавливаем базовый образ PHP с FPM
FROM php:8.2-fpm

# Устанавливаем зависимости
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip

# Очищаем кеш
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Устанавливаем расширения PHP
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd

# Устанавливаем Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Создаем рабочую директорию
WORKDIR /var/www

# Копируем зависимости Composer
COPY src/composer.json src/composer.lock ./

# Устанавливаем зависимости Composer (без скриптов, так как код приложения еще не скопирован)
RUN composer install --prefer-dist --no-scripts --no-progress --no-interaction

# Копируем весь код приложения
COPY src .
COPY /src/.env.example /var/www/.env

# Устанавливаем зависимости Composer
RUN composer install --prefer-dist --no-progress --no-interaction

# Запускаем скрипты Composer
RUN composer dump-autoload --optimize

# Генерируем ключ приложения Laravel
# RUN php artisan key:generate --ansi

# Устанавливаем права
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache
RUN chmod -R 775 /var/www/storage /var/www/bootstrap/cache

# Указываем рабочую директорию
WORKDIR /var/www
